name: CI
on:
  push:
    branches: [ main ]
jobs:
  build:
    name: Build and Pushing the Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: '0'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # - name: Install Octopus Deploy CLI
    #   uses: OctopusDeploy/install-octocli@v1.1.1
    #   with:
    #     version: latest

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.14
      with:
        versionSpec: 5.x

    - id: determine_version
      name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.9.14
      # with:
      #   additionalArguments: /overrideconfig mode=Mainline

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: octo-test

      run: |
        # Build a docker container and push it to ECR
        git_hash=$(git rev-parse --short "$GITHUB_SHA")
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.determine_version.outputs.semVer }} .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.determine_version.outputs.semVer }}
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.determine_version.outputs.semVer }}"
       
    # - name: Update Version
    #   run: |
    #       git_hash=$(git rev-parse --short "$GITHUB_SHA")
    #       version=$(cat ./charts/helm/values.yaml | grep version: | awk '{print $2}')
    #       sed -i "s/$version/${GITHUB_REF##*/}-$git_hash/" ./charts/helm/values.yaml
          
    - name: Commit and push changes
      uses: devops-infra/action-commit-push@v0.3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        commit_message: Version updated

    # - name: Create Octopus Release
    #   uses: OctopusDeploy/create-release-action@v1.1.1
    #   with:
    #     api_key: ${{ secrets.OCTOPUS_API_TOKEN }}
    #     project: cicd-eks-poc
    #     server: ${{ secrets.OCTOPUS_SERVER_URL }}
    #     deploy_to: Development
    #     packages: Deploy container to Kubernetes:cicd-eks-poc:${{ steps.determine_version.outputs.semVer }}